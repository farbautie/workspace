version: "3.8"

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80/tcp"
    env_file:
      - .env
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
        - /etc/localtime:/etc/localtime:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - ./portainer-data:/data
    ports:
        - 9000:9000

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    networks: 
      - cloud
    depends_on:
      - postgres
      - redis
    ports:
      - 8081:80
    volumes:
      - ./nextcloud/html:/var/www/html
      - ./nextcloud/custom_apps:/var/www/html/custom_apps
      - ./nextcloud/config:/var/www/html/config
      - ./nextcloud/data:/var/www/html/data
    env_file:
      - .env

  postgres:
    image: postgres
    restart: unless-stopped
    container_name: postgres
    networks: 
      - cloud
    ports:
        - "5432:5432"
    env_file:
        - .env
    volumes:
        - ./postgres-data:/var/lib/postgresql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    user: '$UID:$GID'
    env_file:
        - .env
    ports:
        - 5050:80
    depends_on:
        - postgres
    volumes:
        - ./pgadmin:/var/lib/pgadmin

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis:/data  
    networks: 
      - cloud

  flame:
    image: pawelmalak/flame:multiarch2.3.1
    container_name: flame
    restart: unless-stopped
    volumes:
      - ./flame/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 4000:5005
    env_file:
      - .env


volumes:
  flame:
  pgadmin:
  postgres-data:

networks:
  cloud:
    name: cloud
    driver: bridge